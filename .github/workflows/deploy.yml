name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Important: Disable submodules to avoid the Git submodule error
        submodules: false
        # Fetch only the latest commit to speed up checkout
        fetch-depth: 1

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download ONNX model (workaround for LFS on GitHub Pages)
      run: |
        mkdir -p models/onnx-community/Qwen2.5-Coder-1.5B-Instruct/onnx
        echo "Downloading INT8 model for GitHub Pages deployment..."
        curl -L -o models/onnx-community/Qwen2.5-Coder-1.5B-Instruct/onnx/model_int8.onnx \
          "https://huggingface.co/onnx-community/Qwen2.5-Coder-1.5B-Instruct/resolve/main/onnx/model_int8.onnx"
        echo "Model download complete"
        ls -la models/onnx-community/Qwen2.5-Coder-1.5B-Instruct/onnx/

    - name: Build application
      run: npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4